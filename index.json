[{"authors":null,"categories":null,"content":" Hello There (･ω･)ﾉ I’m currently employed as a Machine Learning Engineer at Advanced Chemical Industries (ACI). I completed my Honors and Masters in Robotics and Mechatronics Engineering from The University of Dhaka. My research is focused on computer vision, deep learning, human-robot interaction, Graph Neural Networks and Geometric Deep Learning. I am also interested in geometric topology and symmetry in both nature and art.\nIn my free time, I make generative art using processing, JavaScript and Python. I also love 3D modelling and 3D printing. I occasionally write about things I’m interested in and post them on this site.\nI’m also the Pop!_rep for Bangladesh. So, if you’re from BD and are in need of some system76 stickers, feel free to ask :)\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hello There (･ω･)ﾉ I’m currently employed as a Machine Learning Engineer at Advanced Chemical Industries (ACI). I completed my Honors and Masters in Robotics and Mechatronics Engineering from The University of Dhaka.","tags":null,"title":"Tahsin Tariq","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://tahsintariq.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["**Tahsin Tariq Banna**","Sejuti Rahman","Mohammad Tareq"],"categories":null,"content":" Figure. The Pepper robot performing generated gestures.\n","date":1749686400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1749686400,"objectID":"1a2e57f40c0b089fdb796a2b0fa856eb","permalink":"https://tahsintariq.github.io/publication/2025-beyond_words/","publishdate":"2025-06-05T00:00:00Z","relpermalink":"/publication/2025-beyond_words/","section":"publication","summary":"As robots become increasingly integrated into human life, personalizing human-robot interactions (HRI) is crucial for improving user acceptance, engagement, and interaction quality. However, personalizing HRI poses a unique challenge due to the diversity of human personality traits. This paper proposes a method that leverages large language models (LLMs) to dynamically tailor robot conversations according to the Big Five (OCEAN) personality traits. Our novelty lies in using user personality traits to shape robots' verbal responses and implementing contextual action generation for gestures. This study addresses two primary research questions: (1) Does adapting robots' verbal responses based on user personality traits improve communication satisfaction? (2) How does the addition of context-appropriate gestures further enhance user satisfaction? We used Goldberg's personality trait measurement scale (1992) to assess 26 participants who engaged in conversations with an LLM-powered Pepper robot on various topics. The quality of these interactions was self-reported using a revised version of Hecht's (1978) conversation satisfaction scale. Three experimental conditions were conducted: (i) Baseline: Standard LLM conversation, (ii) Personality-congruent: LLM-adjusted dialogue based on personality of participants, and (iii) Enhanced interaction: Personality adaptation plus dynamic gestures. For the third condition, we implemented contextually appropriate pre-defined animations and generated novel gestures by computing joint angle values in real time. Statistical analysis using ANOVA revealed significant differences in communication satisfaction across the three conditions (F=13.41, p\u003c.001). Post-hoc analyses using Šidák's multiple comparison test showed significant pairwise differences: Condition 2 vs. 1: Δ Δmean 4.42, p = 0.02; Condition 3 vs. 1: Δ Δmean 8.23, p \u003c 0.01; Condition 3 vs. 2: Δ Δmean 3.80, p = 0.05. These results demonstrate that both personality-congruent interactions and non-verbal gestures significantly enhance communication satisfaction, with the combined approach yielding the highest satisfaction. This approach opens new possibilities for developing socially intelligent robots with applications in healthcare, education, and customer service.","tags":["Human Robot Interactions","Large Language Models","Personality Traits"],"title":"Beyond Words: Integrating Personality Traits and Context-Driven Gestures in Human-Robot Interactions","type":"publication"},{"authors":["Monisha Mushtary Uttsha","A.K.M. Nadimul Haque","**Tahsin Tariq Banna**","Shamim Ahmed Deowan","Md. Ariful Islam","Hafiz Md. Hasan Babu"],"categories":null,"content":"","date":1713139200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1713139200,"objectID":"3c5876a0ddff01033c54117d206d5dea","permalink":"https://tahsintariq.github.io/publication/2024-ai_agri/","publishdate":"2024-04-15T00:00:00Z","relpermalink":"/publication/2024-ai_agri/","section":"publication","summary":"Soil parameters are crucial aspects in increasing agricultural production. Even though Bangladesh is heavily dependent on agriculture, little research has been done regarding its automation. And a vital aspect of agricultural automation is predicting soil parameters. Generally, sensors relating to soil parameters are quite expensive and are often done in a controlled environment such as a greenhouse. However, a large scale implementation of such expensive sensors is not very feasible. This work tries to find an inexpensive solution towards predicting soil parameters such as soil moisture and temperature, both of which are crucial to the growth of crops. We focus on finding a robust relation between the above mentioned soil parameters with the nearby weather parameters such as humidity and temperature, irrespective of the weather. We apply different machine learning models like multilayer perceptron (MLP), random forest, etc. to predict the soil parameters, given the humidity and temperature of the surrounding environment. For all the experiments we have used a custom made dataset, which contains around 9000 datapoints of soil moisture \u0026 temperature, ambient humidity \u0026 temperature. The data has been collected in an uncontrolled agriculture bed via inexpensive sensors. Our results show that XGBoost regressor achieves the best results with an R2 score of 0.93 and 0.99 for soil moisture and soil temperature data respectively. This suggests very high correlation between the weather parameters and soil parameters. The model also portrayed a very low root mean squared error and mean absolute error of 0.037 \u0026 0.015 for soil moisture and 0.001 \u0026 0.0008 for soil temperature. Our results show that it is indeed possible to find the soil parameters from the corresponding weather, which will have great impact on mass agricultural automation.","tags":["Machine Learning","Agriculture"],"title":"Enhancing Agricultural Automation through Weather Invariant Soil Parameter Prediction Using Machine Learning","type":"publication"},{"authors":null,"categories":null,"content":"more example\nexample list 1 example list 2 example list 3 ","date":1688947200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1688947200,"objectID":"bcbcff3cc776cd413546f797aaac134f","permalink":"https://tahsintariq.github.io/news/2023-phd-offer/","publishdate":"2023-07-10T00:00:00Z","relpermalink":"/news/2023-phd-offer/","section":"news","summary":"Example news","tags":["example"],"title":"example title","type":"news"},{"authors":["**Tahsin Tariq Banna**","Swakshar Deb","Sejuti Rahman","Shafin Rahman"],"categories":null,"content":" Figure. The GEMM Architecture ","date":1687046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1687046400,"objectID":"99df881c4cd60c67cff8d7da6a0f80d7","permalink":"https://tahsintariq.github.io/publication/2023-gemm_memorability/","publishdate":"2023-06-18T00:00:00Z","relpermalink":"/publication/2023-gemm_memorability/","section":"publication","summary":"The focus of this study is to predict human memorability - a person's ability to remember previously seen images or objects. Although recent works have employed deep learning-based approaches to address the problem, they do not utilize spatial structural information within the images. This work investigates Graph Convolutional Networks (GCNs) and Graph Attention Networks (GATs) to approach the problem. The object-centric features within the images are extracted using deep CNN-based models, which contain the structural information of the image. A generic baseline model is created and improved upon iteratively through structural data by constructing graphs and attention mechanisms on the graph edge connections. The constructed graph nodes represent the objects within the image, and the edge connections between the nodes represent the spatial relation to the objects. These graph embeddings are used to train our proposed Graph Embedded Memorability Model (GEMM), which shows significant improvements from the baseline as the attention improves the edge connections of the graph nodes. The model is then evaluated on the LaMem, SUN memorability, and FIGRIM datasets. Although existing state-of-the-art models perform well on one or two datasets, the proposed model generalizes over all three datasets with a Spearman's rank correlation of 0.71 on LaMem, 0.69 on SUN memorability, and 0.59 on the FIGRIM dataset. This model achieves a new state-of-the-art performance compared to the existing literature.","tags":["Deep learning","Computer vision","Memorability"],"title":"GEMM: A Graph Embedded Model for Memorability Prediction","type":"publication"},{"authors":null,"categories":[],"content":"This is a JavaScript implementation of the classic 8-puzzle game. I’ve also built in an AI to solve the puzzle if you are stuck.\nFeatures Uses the A* algorithm to find the shortest way to solve the puzzle You can choose any image to show in the tiles. It will replace the numbers though. The blank tile can also be controlled using hand gestures. It was trained using supervised learning on a set of over 5000 photos. Controls ↑ ← ↓ → Arrow keys ✋ 👈 👇 👉 Hand Gestures (using camera) W A S D Keyboard keys Game Code Here’s the code for A* path finding algorithm that solves the puzzle:\nfunction AStar(v1, v2){ function route(v1, v2){ if (parents[v2] != \u0026#39;NONE\u0026#39;){route(v1, parents[v2])} path.push(v2) } parents = {} searched = [] fcost = {} queue = {} parents[v1] = \u0026#34;NONE\u0026#34; gcost[v1] = 0 fcost[v1] = h(v1) queue[v1] = fcost[v1] while (queue.length != 0){ x = sortProperties(queue); node = x[0][0]; delete queue[node]; searched.push(node); if (node == v2){ try{print(\u0026#34;found\u0026#34;); route(v1, v2);} catch{print(\u0026#39;No path exists\u0026#39;);} return 0; } hash_ = generatechild(node); for(let[n, c] of Object.entries(hash_)){ if (c + gcost[node] \u0026lt; gcost[n]){ if (searched.includes(n)){continue;} else{ gcost[n] = c + gcost[node]; fcost[n] = (gcost[n] + h(n)); parents[n] = node; if (!queue.hasOwnProperty(n)){queue[n] = fcost[n]} } } } } print(\u0026#39;NO path Found\u0026#39;) } ","date":1603584e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1603584e3,"objectID":"d295ae309f69f81a15d5512b5975346f","permalink":"https://tahsintariq.github.io/blog/eight-puzzle-game/","publishdate":"2020-10-25T00:00:00Z","relpermalink":"/blog/eight-puzzle-game/","section":"blog","summary":"A JavaScript implementation of the 8-puzzle game with a built-in AI solver","tags":[],"title":"Eight-Puzzle Game","type":"blog"},{"authors":null,"categories":[],"content":"Introduction Creating a terrain manually for a game or just for visualization purposes is a really daunting task. Instead, a better way to do so is to programmatically generate it by passing some parameters to a code. Here, I discuss how to make a procedural terrain generator mostly using processing for python. This can also be done in any other language or game engine or 3D design software. I will be making a simple terrain using height maps for stylized purposes. But, first we need to understand how to generate height maps using perlin noise.\nPerlin noise is a procedurally generated noise texture developed by ken perlin. How perlin noise is generated using code is discussed thoroughly here. I’ll be using the built in noise function that generates perlin noise for processing.\nGenerating sample points In order to render the terrain, we need some geometry. We can generate tile the plane with cubes, but that would look more like minecraft. We could choose randomly generated points. But purely random or even pseudo-random choices have a tendency of clustering together. This phenomenon is known as Poisson Clumping. Pure or pseudo-random points are not good choices because of this phenomenon, as shown below.\nGenerated random points tend to cluster together. So, instead we use a different sort of random point generation called Poisson Disc Sampling. This generates random points at a given interval and thus making them more uniform. This is a much better choice for generating terrains.\nNow if we triangulate the points,We should get a plane with enough geometry to offset using the generated height map. I go into some details on triangulation here. The final result should look something like this (without the animation of course):\nCreating a rough 3D terrain Now we rotate the canvas on the y-axis so it looks more like a plane.\nThe entire plane rotated along the Y-axis to give it a 3D look Now, using the generated height map, we offset the z-position of the points by the value corresponding to that x and y position in the height map. This gives us a stylized terrain.\nA generated rough terrain We can change the shape of this terrain by changing the noise using offsets. This can result in traversing through the terrain as if we were flying on top of it, or changing the entire topology of the terrain. It will depend on how the noise is being offset.\nI’ve put the processing.py codes for this project here.\nSmoother surfaces The generated surface is still pretty low resolution and looks pointy. This can be solved in two ways. First, we can either increase the number of points from the poisson disk sampling process. The other method is using the Catmull-Clark algorithm. This is a technique used in 3D computer graphics to represent curved surfaces by the specification of a coarser polygonal mesh and produced by a recursive algorithmic method.\nFurthermore, the same process can be used to generate terrain in 3D modelling software. The Catmull-Clark algorithm can be used easily here as most software have built in support. The following demonstrates the improvements made while using the algorithm.\nThe left image shows a coarse pointy surface, the right image shows a smooth, curved, subdivided surface and below is an animated terrain made in Blender 3D Example videos Below are two different renders I’ve made using the processing.py. One with a half inverted render and the other colored according to the height of the points i.e. a topological height map.\n","date":1586908800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586908800,"objectID":"88d9dcc80c3ac0d69058e98bd58f0037","permalink":"https://tahsintariq.github.io/blog/terrain-generation/","publishdate":"2020-04-15T00:00:00Z","relpermalink":"/blog/terrain-generation/","section":"blog","summary":"Generating 3D terrain surfaces using Poisson Disc Sampling","tags":[],"title":"Procedural Terrain Generation","type":"blog"},{"authors":null,"categories":null,"content":" Game of life in Rust and Webassembly This is an implementation of Conway\u0026#39;s Game of Life. Here I\u0026#39;ve used fixedbitset to minimize data transfer between javascript and webassembly. Render Resolution 1080p 1620p 2160p Speed Reset Dead Cells Controls Use the slider to control the speed of the game in steps per frame from 1 to 10. Pause, reset the board or kill all the cells in the board with the buttons If you\u0026#39;re on a computer, CLICK to toggle the state of a cell. CTRL+CLICK to insert a Glider. SHIFT+CLICK to insert a Pulser. CTRL+SHIFT+CLICK to insert Gosper\u0026#39;s Glider Gun. ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"f1c2eace2b4225a8a92896b2bd0767d9","permalink":"https://tahsintariq.github.io/project/game-of-life/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/game-of-life/","section":"project","summary":"project","tags":["aaaaaa"],"title":"Game of life in Rust","type":"project"},{"authors":null,"categories":null,"content":"Update will be posted here.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"006f6f30ba9f03341dfbc41d9d1dd847","permalink":"https://tahsintariq.github.io/project/hybrid-nanoporous-materials/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/hybrid-nanoporous-materials/","section":"project","summary":"Ongoing MSCA project","tags":["Nanofluids"],"title":"Hybrid nanoporous materials for the separation of fluid mixtures","type":"project"}]